<?xml version="1.0" standalone="yes"?>
<!DOCTYPE entity [

  <!ELEMENT entity        (operacion*)>
  <!ELEMENT operacion     (input* , output* , listas? , dataset* , tables*, transformer?, forms)>
<!--   <!ELEMENT operacion     (input* , output* , dataset* , tables*, transformer?, forms)> -->
  
  <!ELEMENT input		  (campoEntrada*)>	<!--   Es la entrada de la operacion. Lo definido aquí llegará en un mapa a la operacion -->
  <!ELEMENT forms		  (form*)>		  	<!--   Para definir una restriccion y conocer que clients utilizan esta operacion. Es a modo de mantenimiento, por ejemplo: al cambiar una operacion, se debe saber quienes suelen llamar a la operacion para realizar los debidos cambios -->
  <!ELEMENT output		  (campoSalida*)> 	<!--   Define el formato de salida -->
  <!ELEMENT transformer	  EMPTY>			<!--   Define una clase que es la encargada de mostrar los resultados en la salida de la operacion. (Muchas tablas, una sola, en paralelo) -->
  
  <!ELEMENT listas		  (lista*)>			<!--   Son las listas para mostrar en la salida-->

  <!ELEMENT lista  (lista*)>  
  <!ATTLIST lista nombreWriter		CDATA    #REQUIRED>
  <!ATTLIST lista nombreLista       CDATA    #REQUIRED>


  <!ELEMENT campoEntrada  (input*|campoEntrada*)>  
  <!ELEMENT campoSalida   (campoSalida*,output*)>  
  
  <!ELEMENT dataset       (campo*)>
  <!ELEMENT campo         EMPTY>
  <!ELEMENT tables       (tableDef+)>
  <!ELEMENT tableDef     (campoTable*)>
  <!ELEMENT campoTable   EMPTY>
  
  <!ATTLIST transformer clase           CDATA #REQUIRED>
  
  <!ATTLIST form name	CDATA #REQUIRED>
  
  <!ATTLIST input name           	 	CDATA    #IMPLIED><!--   Nombre que se corresponde con la entrada de delphi. Si en delphi mandan el valor Name, acá debe exstir en valor Name para obtener los demas datos -->
  <!ATTLIST input keyName           	CDATA    #IMPLIED><!--   Indica el key del mapa que llega a la operacion. Si el valor es 'leo', se debera recuperar usando la key 'leo' sobre el mapa en la operacion -->
  <!ATTLIST input clase           	 	CDATA    #IMPLIED><!-- 	define la clase del parmetro recibido -->
  <!ATTLIST input fieldID           	CDATA    #IMPLIED><!--   Define que atributo sera utilizado como id de la entida, esto es para recuperarlo de la base, si acá el valor es UN_ID, en delphi deberian mandar el valor UN_ID -->
  <!ATTLIST input nombreEntidad        	CDATA    #IMPLIED>
  
  <!ATTLIST campoEntrada name			CDATA #IMPLIED>
  <!ATTLIST campoEntrada clase			CDATA #IMPLIED>
  <!ATTLIST campoEntrada nombreEntidad	CDATA #IMPLIED>
  <!ATTLIST campoEntrada metodo			CDATA #IMPLIED>
  <!ATTLIST campoEntrada fieldID        CDATA #IMPLIED><!--   Define que atributo sera utilizado como id de la entida, esto es para recuperarlo de la base, si acá el valor es UN_ID, en delphi deberian mandar el valor UN_ID -->
 
  <!ATTLIST output name					CDATA #REQUIRED> 
  <!ATTLIST output tableName           	CDATA #REQUIRED><!-- va a representar el nombre de la tabla -->

  <!ATTLIST campoSalida tableName		CDATA #IMPLIED> <!-- en caso de ser hijo de otro campoSalida, es una tabla, y este campo tendra el nombre de la tabla -->
  <!ATTLIST campoSalida target			CDATA #IMPLIED> <!-- El nombre del metodo para recuperar los datos -->
  <!ATTLIST campoSalida value			CDATA #IMPLIED> <!-- el valor de la columna que contendra el valor de resltado de target -->

  <!ATTLIST operacion name              ID    #REQUIRED>
  <!ATTLIST operacion clase             CDATA #IMPLIED>
  <!ATTLIST operacion entidad           CDATA #IMPLIED>
  <!ATTLIST operacion XMLWriter         CDATA #IMPLIED>
  <!ATTLIST operacion redirect          CDATA #IMPLIED>
  <!ATTLIST operacion usaJMS            CDATA #IMPLIED>
  
  <!ATTLIST dataset name                CDATA #REQUIRED>
  <!ATTLIST dataset value               CDATA #IMPLIED>
  <!ATTLIST dataset tabla               CDATA #IMPLIED>
  
  <!ATTLIST campo   name                CDATA #REQUIRED>
  <!ATTLIST campo   value               CDATA #IMPLIED>
  
  <!ATTLIST tableDef    name           	CDATA #REQUIRED>

  <!ATTLIST campoTable	name        	CDATA #REQUIRED>
  <!ATTLIST campoTable  orden       	CDATA #IMPLIED>
  <!ATTLIST campoTable  tipo        	CDATA #IMPLIED>
  <!ATTLIST campoTable  longitud    	CDATA #IMPLIED>
  
]>

<entity>

	<operacion name="GuardarModeloCotizador" clase="com.jkt.cotizador.operaciones.GuardarModeloCotizador">
	
		<input name="mtModeloCotizador" keyName="modelo" clase="com.jkt.cotizador.dominio.ModeloCotizador" fieldID="oid_Modelo_Cotizador">
			<campoEntrada>

				<campoEntrada name="Codigo" clase="String" metodo="setCodigo" />
				<campoEntrada name="Descripcion" clase="String" metodo="setDescripcion" />
				<campoEntrada name="Activo" clase="Boolean" metodo="setActivo" />
				
				<campoEntrada name="mtTitulos" metodo="agregarTitulo" clase="com.jkt.cotizador.dominio.TituloModeloCotizador" fieldID="oid_Titulo_Modelo_Cotizador">
					<campoEntrada name="Codigo" clase="String" metodo="setCodigo" />
					<campoEntrada name="Descripcion" clase="String" metodo="setDescripcion" />
					<campoEntrada name="Activo" clase="Boolean" metodo="setActivo" />
					<campoEntrada name="codInterno" clase="Integer" metodo="setCodigoInterno" />
					<campoEntrada name="codInternoPadre" clase="Integer" metodo="setCodigoInternoPadre" />
				</campoEntrada>
				
				<campoEntrada name="mtConceptoPresupuesto" metodo="agregarConcepto" clase="com.jkt.cotizador.dominio.ConceptoPresupuesto" fieldID="oid_Conceptos_Presupuesto">
					<campoEntrada name="Codigo" clase="String" metodo="setCodigo" />
					<campoEntrada name="Descripcion" clase="String" metodo="setDescripcion" />
					<campoEntrada name="pideArticulo" clase="Boolean" metodo="setPideArticulo" />
					<campoEntrada name="Activo" clase="Boolean" metodo="setActivo" />
					<campoEntrada name="oid_ValorClasif" clase="com.jkt.varios.dominio.ComponenteValor" metodo="setComponenteValor" />
				</campoEntrada>
	
			</campoEntrada>
		</input>
	
		<forms>
			<form name="fORmULaRIoACOmplETar"></form>
		</forms>

	</operacion>

</entity>
