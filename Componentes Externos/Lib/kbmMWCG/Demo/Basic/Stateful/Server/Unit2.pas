unit Unit2;

// =========================================================================
// kbmMW - An advanced and extendable middleware framework.
// by Components4Developers (http://www.components4developers.com)
//
// Service generated by kbmMW service wizard.
//
// INSTRUCTIONS FOR REGISTRATION/USAGE
// -----------------------------------
// Please update the uses clause of the datamodule/form the TkbmMWServer is placed on by adding 
// YourServiceUnitName to it. Eg.
// 
//     uses ...,kbmMWServer,YourServiceUnitName;
// 
// Somewhere in your application, make sure to register the serviceclass to the TkbmMWServer instance. Eg.
// 
// var
//    sd:TkbmMWCustomServiceDefinition;
// ..
//    sd:=kbmMWServer1.RegisterService(yourserviceclassname,false);
// 
// Set the last parameter to true if this is the default service.
// 



{$I kbmMW.inc}

interface

uses
  SysUtils, {$ifdef LEVEL6}Variants{$else}Forms{$endif}, Classes,
  kbmMWSecurity, kbmMWServer, kbmMWGlobal, kbmMWServiceUtils;

type
  TkbmMWCustomService2 = class(TkbmMWCustomService)
  private
     { Private declarations }
     FValue:integer;
  protected
     { Private declarations }
     function ProcessRequest(const Func:string; const ClientIdent:TkbmMWClientIdentity; const Args:array of Variant):Variant; override;
     function PerformGETNUMBER(ClientIdent:TkbmMWClientIdentity; const Args:array of Variant):Variant; virtual;
     function PerformINCNUMBER(ClientIdent:TkbmMWClientIdentity; const Args:array of Variant):Variant; virtual;
  public
     { Public declarations }
{$IFNDEF CPP}class{$ENDIF} function GetPrefServiceName:string; override;
{$IFNDEF CPP}class{$ENDIF} function GetVersion:string; override;
{$IFNDEF CPP}class{$ENDIF} function GetFlags:TkbmMWServiceFlags; override;
     procedure InitializeState; override;
  end;

implementation

{$R *.dfm}


// Service definitions.
//---------------------

{$IFNDEF CPP}class{$ENDIF} function TkbmMWCustomService2.GetPrefServiceName:string;
begin
     Result:='STATEFUL';
end;

{$IFNDEF CPP}class{$ENDIF} function TkbmMWCustomService2.GetVersion:string;
begin
     Result:='kbmMW_1.0';
end;

{$IFNDEF CPP}class{$ENDIF} function TkbmMWCustomService2.GetFlags:TkbmMWServiceFlags;
begin
     Result:=[mwsfListed,mwsfStateful];
end;

procedure TkbmMWCustomService2.InitializeState;
begin
     FValue:=-1;
end;


// Master request processor.
//--------------------------

function TkbmMWCustomService2.ProcessRequest(const Func:string; const ClientIdent:TkbmMWClientIdentity; const Args:array of Variant):Variant;
var
   AFunc:string;
begin
     AFunc:=UpperCase(Func);
     if AFunc='GETNUMBER' then
        Result:=PerformGETNUMBER(ClientIdent,Args)
     else if AFunc='INCNUMBER' then
        Result:=PerformINCNUMBER(ClientIdent,Args)
     else Result:=inherited ProcessRequest(Func,ClientIdent,Args);
end;


// Functions published by the service.
//------------------------------------

function TkbmMWCustomService2.PerformGETNUMBER(ClientIdent:TkbmMWClientIdentity; const Args:array of Variant):Variant;
begin
     Result:=FValue;
end;

function TkbmMWCustomService2.PerformINCNUMBER(ClientIdent:TkbmMWClientIdentity; const Args:array of Variant):Variant;
begin
     inc(FValue);
     Result:=FValue;
end;


end.