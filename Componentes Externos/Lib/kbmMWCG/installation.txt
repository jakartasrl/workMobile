kbmMW installation:
===================
Updated Jun 6 2011

Please carefully read the general instructions and the instructions for
your specific development environment versions before installing kbmMW in the
IDE.

Specifically for kbmMW CodeGear Edition:
----------------------------------------

kbmMW CodeGear Edition contains precompiled libraries and object files, compiled on the latest
officially released Delphi/Win32 edition from CodeGear.

Before installing, make sure that Delphi is closed.
The installer usually automatically installs both kbmMemTable and kbmMW CodeGear Edition
into Delphi.

As the configuration of kbmMW CodeGear Edition is fixed, do not alter/tamper with 
the configuration file kbmMWConfig.inc.

Compiling the demos:
You may need to add the kbmMW CodeGear Edition install directory in the Search Path of the demo (Project/Options).
If you see xxxx.DFM file not found, then its due to not having the correct setting in project Search Path.

The remaining installation instructions in this document should be ignored for
kbmMW CodeGear Edition.


Before all installation types:
------------------------------
1)      Make sure to download kbmMemTable v. 6.50 or newer and install it
        according to its installation instructions.

2)      For Delphi 6/7, make sure to have Indy v. 8.00.23 or v. 9.00.03
          or newer installed.
        For BCB 6, make sure to use latest version of Indy.
        For Delphi 2005 and BDS 2006 choose either Indy 9 or 10.
        For Delphi 2007 choose Indy 10.
        For Delphi 2009 choose Indy 10.
        For Delphi 2010 choose Indy 10.
        For C++Builder 2010 choose Indy 10.
        For Delphi XE choose Indy 10.
        For C++Builder XE choose Indy 10.
        For Lazarus choose Synapse.

        Please Notice the following:
         - D2005 includes Indy 9 and Indy 10.0.52 out of the box.
         - BDS 2006 includes Indy 9 and Indy 10.1.x.x out of the box.
         - BDS 2007 includes 10.1.x.x out of the box.
         - CDS 2009 includes 10.2.3 out of the box.
         - CDS 2010 includes 10.5.5 out of the box.
         - CDS XE includes 10.5.7 out of the box.
        For above SKUs please select the Indy version that you have installed when
        installing kbmMW.

         - Lazarus do not include Synapse, which must be downloaded from 
           http://ararat.cz/synapse/doku.php.

3)      Remember that kbmMWConfig.inc is what specifies what features your kbmMW installation
        will contain, and that you must already have installed the 3rdparty prerequisites before
        a kbmMW compilation will be successful. 
        You may also need to update Library Path (Delphi) and Include Path (C++Builder) to point 
        at the relevant 3rdparty software's source or installation directory.
       
  

After running the setup program:
--------------------------------
1)      After running the kbmMW setup file and the files have been extracted, open
        kbmMWConfig.inc with a text editor and modify it as needed to configure
        what kbmMW should support.


Specifically for kbmMW Enterprise and Professional Editions:
------------------------------------------------------------

IMPORTANT:
----------
<xxx> in the following text should be replaced as follows:
   kbmMW Professional Edition  - Replace with the characters:Pro
   kbmMW Enterprise Edition    - Replace with the characters:Ent

Hence kbmMWRunD6<xxx> becomes kbmMWRunD6Pro if Professional Edition is being installed etc.

If Delphi complains about not being able to locate kbm*.bpl or kbm*.dcp files after you restart Delphi,
its because the path where the files are located is not included in the Windows PATH environment variable.
Delphi (Windows) use the PATH environment variable to locate DLLs and BPL and DCP files are both DLLs.

----------------------------------------------------------------------------------------------------------------------
Lazarus 0.9.30 (or newer) installation:
----------------------------------------------------------------------------------------------------------------------
1)	Make sure that kbmMemTable has been installed first.
	Make sure you have latest version of Synapse on your machine (www.ararat.cz)

2)	Copy files *.inc from kbmMemTable source directory to kbmMW source directory.
 
3)	Open Package: kbmMWRunLazEnt.lpk
	Add the path to Synapse Lib directory (containing sources) to 
	the kbmMWRunLazEnt.lpk package's Compiler Options/Paths/Other Unit Files
	Recompile Clean (in the More.. button on the package toolbar)

4)	Open Package: kbmMWDesLazEnt.lpk
	Recompile Clean (in the More.. button on the package toolbar)
	Install (Recompile IDE)

----------------------------------------------------------------------------------------------------------------------
Embarcadero C++Builder XE for Win32 (standalone) installation:
----------------------------------------------------------------------------------------------------------------------
1)      If you have allready had kbmMW installed in the RADStudio XE, Delphi XE or C++Builder XE
        toolpalette, you may need to remove it before trying to install it again.
        Do this in Components/Packages by selecting the kbmMW package and select Remove.
         
2)      Open kbmMWRunCXE<xxx>.cbproj
        Make sure that Tools/Options/Delphi Options/Library and 
        optionally Tools/Options/C++ Options/Paths and directories/Library Path paths are pointing 
        correctly to Indy, kbmMemTable and relevant 3rdparty libraries.
	Make sure that Tools/Options/C++ Options/Paths and directories/Include path is pointing 
        correctly to the directory containing the source of kbmMemTable.
        Add required 3rdparty libraries to the required section of the opened kbmMW package.
        For Indy 10 (which is the default used by C++Builder XE), at least add IndyCore.bpi 
        and IndySystem.bpi.
        Compile it.
        If it suggests adding 3rdparty packages to the kbmMW runtime package, accept and let it recompile!
        Make sure the generated bpi and lib is placed in a directory in the systems PATH.
        Typically one would move it to C++Builders's own DCP directory.

3)      Open kbmMWDesCXE<xxx>.cbproj
        Make sure that Tools/Options/Delphi Options/Library and 
        optionally Tools/Options/C++ Options/Paths and directories/Library Path paths are pointing 
        correctly to Indy, kbmMemTable and relevant 3rdparty libraries.
	Make sure that Tools/Options/C++ Options/Paths and directories/Include path is pointing 
        correctly to the directory containing the source of kbmMemTable.
        For Indy 10 (which is the default used by C++Builder 2010), at least add IndyCore.bpi 
        and IndySystem.bpi.
        Compile it.
        Make sure the generated bpi and lib is placed in a directory in the systems PATH.
        Typically one would move it to C++Builders's own DCP directory.
        Install it.

----------------------------------------------------------------------------------------------------------------------
Embarcadero RAD Studio XE or Delphi XE for Win32 installation:
----------------------------------------------------------------------------------------------------------------------
1)      If you have allready had kbmMW installed in the Delphi 2010 toolpalette,
        you may need to remove it before trying to install it again.
        Do this in Components/Packages by selecting the kbmMW package and select Remove.
         
2)      Open kbmMWRunDXE<xxx>.dproj
        Make sure that Environment/Library paths are pointing correctly to Indy, kbmMemTable and
        selected 3rdparty libraries.
        Add required 3rdparty libraries to the required section of the opened kbmMW package.
        For Indy 10 (which is the default used by Delphi XE), at least add IndyCore.dcp 
        and IndySystem.dcp.
        Compile it.
        If it suggests adding 3rdparty packages to the kbmMW runtime package, accept and let it recompile!
        Make sure the generated bpl is placed in a directory in the systems PATH.
        Typically one would move it to Delphi's own BPL and DCP directories respectively.

3)      Open kbmMWDesDXE<xxx>.dproj
        Make sure that Environment/Library paths are pointing correctly to Indy, kbmMemTable and
        selected 3rdparty libraries.
        For Indy 10 (which is the default used by Delphi XE), at least add IndyCore.dcp 
        and IndySystem.dcp.
        Compile it.
        Make sure the generated bpl/dcp is placed in a directory in the systems PATH.
        Typically one would move it to Delphi's own BPL and DCP directories respectively.
        Install it.

----------------------------------------------------------------------------------------------------------------------
Embarcadero C++Builder 2010 for Win32 (standalone) installation:
----------------------------------------------------------------------------------------------------------------------
1)      If you have allready had kbmMW installed in the RADStudio 2010, Delphi 2010 or C++Builder 2010
        toolpalette, you may need to remove it before trying to install it again.
        Do this in Components/Packages by selecting the kbmMW package and select Remove.
         
2)      Open kbmMWRunC2010<xxx>.cbproj
        Make sure that Environment/Library paths are pointing correctly to Indy, kbmMemTable and
        selected 3rdparty libraries.
        Add required 3rdparty libraries to the required section of the opened kbmMW package.
        For Indy 10 (which is the default used by Delphi 2010), at least add IndyCore.bpi 
        and IndySystem.bpi.
        Compile it.
        If it suggests adding 3rdparty packages to the kbmMW runtime package, accept and let it recompile!
        Make sure the generated bpi and lib is placed in a directory in the systems PATH.
        Typically one would move it to C++Builders's own DCP directory.

3)      Open kbmMWDesC2010<xxx>.cbproj
        Make sure that Environment/Library paths are pointing correctly to Indy, kbmMemTable and
        selected 3rdparty libraries.
        For Indy 10 (which is the default used by Delphi 2010), at least add IndyCore.bpi 
        and IndySystem.bpi.
        Compile it.
        Make sure the generated bpi and lib is placed in a directory in the systems PATH.
        Typically one would move it to C++Builders's own DCP directory.
        Install it.

----------------------------------------------------------------------------------------------------------------------
Embarcadero RAD Studio 2010 or Delphi 2010 for Win32 installation:
----------------------------------------------------------------------------------------------------------------------
1)      If you have allready had kbmMW installed in the Delphi 2010 toolpalette,
        you may need to remove it before trying to install it again.
        Do this in Components/Packages by selecting the kbmMW package and select Remove.
         
2)      Open kbmMWRunD2010<xxx>.dproj
        Make sure that Environment/Library paths are pointing correctly to Indy, kbmMemTable and
        selected 3rdparty libraries.
        Add required 3rdparty libraries to the required section of the opened kbmMW package.
        For Indy 10 (which is the default used by Delphi 2010), at least add IndyCore.dcp 
        and IndySystem.dcp.
        Compile it.
        If it suggests adding 3rdparty packages to the kbmMW runtime package, accept and let it recompile!
        Make sure the generated bpl is placed in a directory in the systems PATH.
        Typically one would move it to Delphi's own BPL and DCP directories respectively.

3)      Open kbmMWDesD2010<xxx>.dproj
        Make sure that Environment/Library paths are pointing correctly to Indy, kbmMemTable and
        selected 3rdparty libraries.
        For Indy 10 (which is the default used by Delphi 2010), at least add IndyCore.dcp 
        and IndySystem.dcp.
        Compile it.
        Make sure the generated bpl/dcp is placed in a directory in the systems PATH.
        Typically one would move it to Delphi's own BPL and DCP directories respectively.
        Install it.

----------------------------------------------------------------------------------------------------------------------
CodeGear Delphi/C++ 2009 for Win32 installation:
----------------------------------------------------------------------------------------------------------------------
1)      If you have allready had kbmMW installed in the Delphi 2009 toolpalette,
        you may need to remove it before trying to install it again.
        Do this in Components/Packages by selecting the kbmMW package and select Remove.
         
2)      Open kbmMWRunD2009<xxx>.dproj
        Make sure that Environment/Library paths are pointing correctly to Indy, kbmMemTable and
        selected 3rdparty libraries.
        Add required 3rdparty libraries to the required section of the opened kbmMW package.
        For Indy 10 (which is the default used by Delphi 2009), at least add IndyCore.dcp 
        and IndySystem.dcp.
        Compile it.
        If it suggests adding 3rdparty packages to the kbmMW runtime package, accept and let it recompile!
        Make sure the generated bpl is placed in a directory in the systems PATH.
        Typically one would move it to Delphi's own BPL and DCP directories respectively.

3)      Open kbmMWDesD2009<xxx>.dproj
        Make sure that Environment/Library paths are pointing correctly to Indy, kbmMemTable and
        selected 3rdparty libraries.
        For Indy 10 (which is the default used by Delphi 2009), at least add IndyCore.dcp 
        and IndySystem.dcp.
        Compile it.
        Make sure the generated bpl/dcp is placed in a directory in the systems PATH.
        Typically one would move it to Delphi's own BPL and DCP directories respectively.
        Install it.

----------------------------------------------------------------------------------------------------------------------
CodeGear Delphi/C++ 2007 for Win32 installation:
----------------------------------------------------------------------------------------------------------------------
1)      If you have allready had kbmMW installed in the Delphi 2007 toolpalette,
        you may need to remove it before trying to install it again.
        Do this in Components/Packages by selecting the kbmMW package and select Remove.
         
2)      Open kbmMWRunD2007<xxx>.dproj
        Make sure that Environment/Library paths are pointing correctly to Indy, kbmMemTable and
        selected 3rdparty libraries.
        Add required 3rdparty libraries to the required section of the opened kbmMW package.
        For Indy 10 (which is the default used by Delphi 2007), at least add IndyCore.dcp 
        and IndySystem.dcp. For Indy 9, add Indy.dcp
        Compile it.
        If it suggests adding 3rdparty packages to the kbmMW runtime package, accept and let it recompile!
        Make sure the generated bpl is placed in a directory in the systems PATH.
        Typically one would move it to Delphi's own BPL and DCP directories respectively.

3)      Open kbmMWDesD2007<xxx>.dproj
        Make sure that Environment/Library paths are pointing correctly to Indy, kbmMemTable and
        selected 3rdparty libraries.
        For Indy 10 (which is the default used by Delphi 2007), at least add IndyCore.dcp 
        and IndySystem.dcp. For Indy 9, add Indy.dcp
        Compile it.
        Make sure the generated bpl/dcp is placed in a directory in the systems PATH.
        Typically one would move it to Delphi's own BPL and DCP directories respectively.
        Install it.

----------------------------------------------------------------------------------------------------------------------
BDS 2006/Delphi for Win32 installation:
(Notice if you want it installed for both C++ and Delphi/Win32, follow the BDS 2006/C++
installation procedure instead)
----------------------------------------------------------------------------------------------------------------------
1)      If you have allready had kbmMW installed in the BDS toolpalette,
        you may need to remove it before trying to install it again.
        Do this in Components/Packages by selecting the kbmMW package and select Remove.
         
2)      Open kbmMWRunD2006<xxx>.dpk
        Make sure that Environment/Library paths are pointing correctly to Indy, kbmMemTable and
        selected 3rdparty libraries.
        Add required 3rdparty libraries to the required section of the opened kbmMW package.
        For Indy 10, at least add IndyCore.dcp and IndySystem.dcp. For Indy 9, add Indy.dcp
        Compile it.
        If it suggests adding 3rdparty packages to the kbmMW runtime package, accept and let it recompile!
        Make sure the generated bpl is placed in a directory in the systems PATH.
        Typically one would move it to Delphi's own BPL directory.

3)      Open kbmMWDesD2006<xxx>.dpk
        Make sure that Environment/Library paths are pointing correctly to Indy, kbmMemTable and
        selected 3rdparty libraries.
        Add required 3rdparty libraries to the required section of the opened kbmMW package.
        For Indy 10, at least add IndyCore.dcp and IndySystem.dcp. For Indy 9, add Indy.dcp
        Compile it.
        Make sure the generated bpl/dcp is placed in a directory in the systems PATH.
        Typically one would move it to Delphi's own BPL directory.
        Install it.

----------------------------------------------------------------------------------------------------------------------
BDS 2006/C++ installation:
----------------------------------------------------------------------------------------------------------------------
1)      Use BDS 2006 Update 2 and make sure you have installed it to use Indy9.
        Indy10 is not supported for C++ support in BDS 2006!

2)      If you have allready had kbmMW installed in the BDS toolpalette,
        you may need to remove it before trying to install it again.
        Do this in Components/Packages by selecting the kbmMW package and select Remove.
         
3)      Open kbmMWRunD2006<xxx>.dpk
        Make sure that Tools/Options/Delphi and C++ paths are pointing correctly to Indy,
        kbmMemTable and selected 3rdparty libraries.
        In Project/Options/Linker select 'Generate all C++ files'!.  
        Add required 3rdparty libraries to the required section of the opened kbmMW package.
        For Indy 9, add Indy.dcp
        Compile it.
        If it suggests adding 3rdparty packages to the kbmMW runtime package, accept and let it recompile!
        Make sure the generated bpl is placed in a directory in the systems PATH.
        Typically one would move it to BDS's own BPL directory.

4)      Important! After compilation, go the kbmMW source installation directory, and REMOVE all
        hpp files that do NOT start with kbmMW. These non kbmMW related files are generated
        due to a bug in BDS 2006.

5)      Open kbmMWDesD2006<xxx>.dpk
        Make sure that Tools/Options/Delphi and C++ paths are pointing correctly to Indy,
        kbmMemTable and selected 3rdparty libraries.
        In Project/Options/Linker select 'Generate all C++ files'!.  
        Add required 3rdparty libraries to the required section of the opened kbmMW package.
        For Indy 9, add Indy.dcp
        Compile it.
        Make sure the generated bpl/dcp is placed in a directory in the systems PATH.
        Typically one would move it to BDS's own BPL directory.
        Install it.

6)      When compiling applications using Indy 9 in C++ you may get a compile error E2040
        in idStream.hpp regarding EOF (declaration invalid). The reason is that EOF is 
        a predefined C++ type in the standard C++ header files and thus conflicts with the 
        Indy 9 declaration of the same.
        As a quick fix, change the uppercase EOF to a lowercase eof and save idStream.hpp.
        Then recompile.

Notes for existing C++ projects. It seems that the automatic upgrade of projects from C++Builder 6
to BDS 2006/C++ is not correct. Hence a compiled application based on an upgraded project
may A/V and misbehave in strange ways. For that reason, make sure to create _new_ C++ projects from
scratch, only moving the existing service source files (for server side projects) into the new project.

----------------------------------------------------------------------------------------------------------------------
Delphi 2005/Win32 installation:
----------------------------------------------------------------------------------------------------------------------
1)      Open kbmMWRunD2005<xxx>.dpk
        Make sure that Environment/Library paths are pointing correctly to Indy, kbmMemTable and
        selected 3rdparty libraries.
        Compile it.
        If it suggests adding 3rdparty packages to the kbmMW runtime package, accept and let it recompile!
        Make sure the generated bpl is placed in a directory in the systems PATH.
        Typically one would move it to Delphi's own BPL directory.

2)      Open kbmMWDesD2005<xxx>.dpk
        Make sure that Environment/Library paths are pointing correctly to Indy, kbmMemTable and
        selected 3rdparty libraries.
        Compile it.
        Make sure the generated bpl is placed in a directory in the systems PATH.
        Typically one would move it to Delphi's own BPL directory.
        Install it.

----------------------------------------------------------------------------------------------------------------------
Delphi 7 installation:
----------------------------------------------------------------------------------------------------------------------
1)      Open kbmMWRunD7<xxx>.dpk
        Make sure that Environment/Library paths are pointing correctly to Indy, kbmMemTable and
        selected 3rdparty libraries.
        Make sure the generated bpl is placed in a directory in the systems PATH.
        Compile it.
        If it suggests adding 3rdparty packages to the kbmMW runtime package, accept and let it recompile!
        Make sure the generated bpl is placed in a directory in the systems PATH.

2)      Open kbmMWDesD7<xxx>.dpk
        Make sure that Environment/Library paths are pointing correctly to Indy, kbmMemTable and
        selected 3rdparty libraries.
        Compile it.
        Make sure the generated bpl is placed in a directory in the systems PATH.
        Install it.

----------------------------------------------------------------------------------------------------------------------
Delphi 6 installation:
----------------------------------------------------------------------------------------------------------------------
1)      Open kbmMWRunD6<xxx>.dpk
        Make sure that Environment/Library paths are pointing correctly to Indy, kbmMemTable and
        selected 3rdparty libraries.
        Compile it.
        If it suggests adding 3rdparty packages to the kbmMW runtime package, accept and let it recompile!
        Make sure the generated bpl is placed in a directory in the systems PATH.

2)      Open kbmMWDesD6<xxx>.dpk
        Make sure that Environment/Library paths are pointing correctly to Indy, kbmMemTable and
        selected 3rdparty libraries.
        Compile it.
        Make sure the generated bpl is placed in a directory in the systems PATH.
        Install it.

----------------------------------------------------------------------------------------------------------------------
Borland C++ Builder 6 installation:
----------------------------------------------------------------------------------------------------------------------
BCB6 installation is a bit more cumbersome than Delphi installations.
The reason is partly linker bugs in BCB6, package handling quirks in BCB6 and missing files in the original Indy for BCB6 installation.

NOTICE! It is of vital importance that these bullets are followed precisely to get a successfull installation of kbmMW in BCB6:

1)      Make sure to select that BCB6 use Indy9 during kbmMW installation.

2)      If BCB6 is open, close it.

3)      If you are using the original Indy distributed with BCB6 and have not upgraded it you need to
        uninstall it and upgrade it.
        Do this by opening the Control Panel and choose Add/Remove applications.
        Select Borland C++Builder 6 and start uninstallation.
        Select to modify installation.
        Find Indy in the list of packages and uncheck it.
        Perform modification and close installation wizard.
        Look for dclIndy.bpl, dclIndy.bpi and indy.bpl on your harddrives and remove them.

4)      Download and install the latest Indy 9 release from www.nevrona.com.
        After extraction into the directory, note the name of the directory.
        Execute FullC6.bat in the Indy9 directory.

5)      If latest release of kbmMemTable is not installed download it from www.components4developers.com
        If you have previously installed kbmMemTable, please remove it including any remains in the BCB6
           Projects BPL/LIB directories.
        Install new kbmMemTable.

6)      Start BCB6

7)      Open kbmMWRunC6<xxx>.bpk from the kbmMW source directory.
        Open Options - Directories/Conditionals pane.
        Modify Include Path to contain the path of the subdirectory C6 of the Indy9 installation directory.
            Please make sure that the path is _first_ in the Include Path list
            _and_ the path of the subdirectory C6 of the kbmMemTable installation directory.
        Modify Library Path to contain both the path of the subdirectory C6 of the Indy9 installation directory
            _and_ the path of the subdirectory C6 of the kbmMemTable installation directory.
            Please make sure both paths are _first_ in the Library Path list.
  
8)      Save the kbmMWRunC6<xxx>.bpk project.

9)      Compile it.
        It will most likely suggest to add some libraries to the package. Accept that and let it recompile.

10)     If compilation was without errors, save the project.

11)     Open kbmMWDesC6<xxx>.bpl from the kbmMW source directory.
        Open Options - Directories/Conditionals pane.
        Modify Include Path to contain both the path of the subdirectory C6 of the Indy9 installation directory
           _and_ the path of the subdirectory Source of the kbmMemTable installation directory.
           Please make sure that the paths are _first_ in the Include Path list.
        Modify Library Path to contain both the path of the subdirectory C6 of the Indy9 installation directory
           _and_ the path of the subdirectory C6 of the kbmMemTable installation directory
           _and_ the path of the subdirectory C6 of the kbmMW installation directory.
           Please make sure the 3 paths are _first_ in the Library Path list.

12)     Compile it.
        It will most likely suggest to add some libraries to the package. Accept that and let it recompile.

13)     If compilation was without errors, save the project.
        Install the package by clicking the Install button.

Congratulations. You are now able to use kbmMW in combination with BCB6.

If errors like Access Violation during linking occurs, its usually because some odd libraries has sneaked into the BCB linker process of some reason. Please install a fresh copy of the kbmMW runtime and designtime packages and repeat this installation document from start.
You may also try to open the kbmMWRunC6<xxx>.bpk file and make sure the <SPARELIBS, <LIBRARIES and <PACKAGES lines look like this (You need to close BCB6 beforehand!!!):
    <LIBRARIES value="indy60 bdertl.lib dbrtl.lib vclx.lib vcldb.lib vcl.lib rtl.lib"/>
    <SPARELIBS value="rtl.lib vcl.lib vcldb.lib vclx.lib dbrtl.lib bdertl.lib indy60"/>
    <PACKAGES value="kbmMemC6Run<xxx>.bpi"/>
After making the changes, save it.
Then open the kbmMWDesC6.bpk file and make sure the <LIBRARIES <SPARELIBS and <PACKAGES lines look like this:
    <LIBRARIES value="bdertl.lib dbrtl.lib vclx.lib vcldb.lib"/>
    <SPARELIBS value="rtl.lib vcl.lib vcldb.lib vclx.lib dbrtl.lib bdertl.lib"/>
    <PACKAGES value="designide.bpi rtl.bpi vcl.bpi kbmMemC6Des<xxx>.bpi Indy60.bpi"/>
After making the changes, save it.
Then try to rerun this installation guide.

If errors like 'Cannot install xxx because yyy is already loaded in zzz' occurs, its usually because some dependent library has not been installed or referenced properly.

Since the original Indy BCB installation is _not_ complete, its important to have Indy upgraded to the latest v9 version.
Its of vital importance that the original Indy is uninstalled correctly. If not the install wizard of BCB might automatically try to fix the installation by copying in the original Indy again.

----------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------------
Kylix 3 for Delphi installation:
----------------------------------------------------------------------------------------------------------------------
1)	Make sure to copy kbmMemK3DDes.so, kbmMemK3DRun.so, kbmMemK3DDes.dcp and kbmMemK3DRun.dcp
	to one of the folders searched by Kylix. As an example use your home directory.
	The files are typically placed in a k3d directory underneath the kbmMemTable installation
	directory.

2)	Open kbmMWConfig.inc in a text editor.
	Modify it to only include features compatible with Kylix.
	Eg. 
	Database adapters: DBExpress and kbmMemTable, but not the BDE since its Windows only
	Transports: Indy transport, Local transport but not ISAPI transport since its Windows only.
	etc.
	Save it.

3)	Open kbmMWK3DRun<xxx>.dpk
	Compile it.
	Copy kbmMWK3DRun<xxx>.so and kbmMWK3DRun<xxx>.dcp to one of the directories searched by Kylix. Eg.
	your home directory.
	The files are typically placed in a k3d directory underneath the kbmMW installation
	directory.

4)	Open kbmMWK3DDes<xxx>.dpk
	Compile it.
	Copy kbmMWK3DDes<xxx>.so and kbmMWK3DDes<xxx>.dcp to one of the directories searched by Kylix. Eg.
	your home directory.
	The files are typically placed in a k3d directory underneath the kbmMW installation
	directory.

5)	In Component/Install packages choose Add...
	Look for kbmMWK3DDes<xxx>.so and select it.



Notice that all new versions and packages can be found at the Components4Developers site:
	http://www.components4developers.com

Make sure to read the license agreement and disclaimer file (license.txt) before using any
of the source files! By using the source files you are automatically accepting the full
extent of the license agreement.

Questions must in general be directed through the kbmMW community at:
	http://www.yahoogroups.com/group/kbmMW
or the Components4Developers news server at:
	news://news.components4developers.com

best regards

Kim Madsen
mail://kbm@components4developers.com